// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material'as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-legacy-typography-config());`
@include mat.all-legacy-component-typographies();
@include mat.legacy-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ng-simple-state-management-primary: mat.define-palette(mat.$indigo-palette);
$ng-simple-state-management-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$ng-simple-state-management-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$ng-simple-state-management-theme: mat.define-light-theme((color: (primary: $ng-simple-state-management-primary,
            accent: $ng-simple-state-management-accent,
            warn: $ng-simple-state-management-warn,
        )));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-legacy-component-themes($ng-simple-state-management-theme);

/* You can add global styles to this file, and also import other style files */
@import "@fortawesome/fontawesome-free/css/fontawesome.css";
@import "@fortawesome/fontawesome-free/css/all.css";
@import "ngssm-toolkit/styles/ngssm.scss";
@import "ngssm-shell/styles/ngssm-shell.scss";
@import "ngssm-shell/styles/ngssm-sidenav.scss";
@import 'ag-grid-community/styles/ag-grid.css';
@import 'ag-grid-community/styles/ag-theme-material.css';

html,
body {
    height: 100%;
}

body {
    margin: 0;
    display: flex;
    flex-direction: column;
    font-family: Roboto, "Helvetica Neue", sans-serif;
}

.ngssm-chip.ngssm-chip-info {
    color: white;
    background-color: var(--primary-color, blue);
}

.ngssm-chip.ngssm-chip-error {
    color: white;
    background-color: var(--danger-color, red);
}

.footer-message {
    font-size: 12px;
    border: 1px solid blue;
    padding-left: 8px;
    padding-right: 8px;
    border-radius: 25px;
}

.ignored-row {
    position: absolute;
    background-color: lightgray;
    opacity: 1;
    z-index: 100;
}